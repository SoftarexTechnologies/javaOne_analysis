jar {
    manifest {
        attributes 'Implementation-Title': 'Analysis models',
                'Implementation-Version': version
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

configurations {
    querydslapt
}

dependencies {
    querydslapt 'com.mysema.querydsl:querydsl-apt:3.6.9'
    compile 'org.hibernate:hibernate-core:5.0.4.Final'
    compile 'org.hibernate.common:hibernate-commons-annotations:4.0.5.Final'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    compile 'org.javassist:javassist:3.20.0-GA'
    compile 'com.mysema.querydsl:querydsl-jpa:3.6.9'
    compile 'org.jboss.logging:jboss-logging:3.3.0.Final'
    compile 'antlr:antlr:2.7.7'
    compile 'dom4j:dom4j:1.6.1'
    compile 'org.postgresql:postgresql:9.3-1100-jdbc41'

}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

clean {
    delete sourceSets.generated.java.srcDirs
}
